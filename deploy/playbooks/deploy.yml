---
- hosts: all
  become: yes
  # become_user: "{{ app_user }}"
  become_user: root

  vars_files:
    - vars.yml

  roles:
    - geerlingguy.passenger

  environment:
    "{{app_env}}"

  tasks: 
    - git:
      repo: "git@github.com:JerryShockley/kserver.git"
        dest: "{{ app_directory }}"
        accept_hostkey: true
        force: yes
      register: app_updated
      notify: restart nginx

    - name: Ensure secrets file is present.
      template:
        src: templates/secrets.yml.j2
        dest: "{{ app_directory }}/config/secrets.yml"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: 0664
      notify: restart nginx

    - name: Install required dependencies with bundler.
      shell: "bundle install --path vendor/bundle chdir={{ app_directory }}"
      when: app_updated.changed == true
      notify: restart nginx

    - name: Check if database exists.
      shell: "psql -lqt | cut -d | -f 1 | grep -qw {{db_names[ app_mode ]}}"
      register: app_db_exists
      become: yes
      become_user: postgres
      failed_when: app_db_exists.rc < 0 or app_db_exists.rc > 1

    - name: Create database.
      shell: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - "{{bundle exec rake db:create}}"
        - "{{bundle exec rake db:schema:load}}"
        - "{{bundle exec rake assets:precompile}}"
      when: app_db_exists.rc == 0
      notify: restart nginx

    - name: Perform deployment-related rake tasks for Production.

      shell: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - "{{bundle exec rake db:migrate}}"
        - "{{bundle exec rake assets:precompile}}"
      when: 
        - app_updated.changed == true
        - app_mode == "production"
      notify: restart nginx

    - name: Perform deployment-related rake tasks for Test.
      shell: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - "{{bundle exec rake db:drop}}"
        - "{{bundle exec rake db:setup}}"
      when: 
        - app_updated.changed == true
        - app_mode == "test"
      notify: restart nginx

    - name: Perform deployment-related rake tasks for Development.
      shell: "{{ item }} chdir={{ app_directory }}"
      with_items:
        - "{{bundle exec rake db:migrate}}"
        - "{{bundle exec rake db:seed}}"
      when: 
        - app_updated.changed == true
        - app_mode == "development"
      notify: restart nginx

    - name: Ensure app has correct files owner and group.
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        recurse: yes
      notify: restart nginx
